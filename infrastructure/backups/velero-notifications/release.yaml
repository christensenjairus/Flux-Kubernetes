apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: velero-notifications
  namespace: velero
spec:
  interval: 30m
  chart:
    spec:
      chart: velero-notifications
      version: "1.x.x"
      sourceRef:
        kind: HelmRepository
        name: velero-notifications
        namespace: velero
      interval: 12h
  values:

    # Default values for velero-notifications.
    # This is a YAML-formatted file.
    # Declare variables to be passed into your templates.

    # -- Number of desired pods
    replicaCount: 1

    image:
      # -- image repository
      repository: ghcr.io/simoncaron/velero-notifications
      # -- image tag
      tag: ""  # will default to the appVersion in Chart.yaml
      # -- image pull policy
      pullPolicy: IfNotPresent
      # -- Set image pull secrets
      pullSecrets: [ ]

    # -- Set an override for the prefix of the fullname
    nameOverride: ""
    # -- Set the entire name definition
    fullnameOverride: ""

    configuration:
      # -- Namespace where Velero is deployed
      veleroInstallNamespace: velero

      # -- Prefix to insert before notification message
      notificationPrefix: "[Velero]"

      slack:
        # -- Enable Slack notifications
        enabled: true
        # -- Send notifications on failure or partial failures only
        onFailureOnly: false
        # -- Hook URL for slack notifications
        webhook: ""
        # -- Channel for slack notifications
        channel: "velero"
        # -- Username for slack notifications
        username: "Velero"

      email:
        # -- Enable email notifications
        enabled: false
        # -- Send notifications on failure or partial failures only
        onFailureOnly: true
        smtp:
          # -- SMTP server URL for email notifications
          host: ""
          # -- SMTP server port for email notifications
          port: 587
          # -- SMTP server username for email notifications
          username: ""
          # -- SMTP server password for email notifications
          password: ""
        # -- Sender address for email notifications
        fromAddress: ""
        # -- Receiver address for email notifications
        toAddress: ""

      webhook:
        # -- Enable webhook notifications
        enabled: false
        # -- Send notifications on failure or partial failures only
        onFailureOnly: false
        # -- Webhook URL for webhook notifications
        url: ""

    # -- Specify extra environments variables to use
    extraEnvVars: #[ ]
      - name: slackHookUrl
        valueFrom:
          secretKeyRef:
            name: velero-slack-webhook
            key: webhook_url
    #  - name: regularEnvVariable
    #    value: 123

    rbac:
      # -- Specifies whether a ClusterRole/ClusterRoleBinding should be created
      create: true

    serviceAccount:
      # -- Specifies whether a service account should be created
      create: true
      # -- Annotations to add to the service account
      annotations: { }
      # -- The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
      name: ""

    # -- Set annotations on the pod
    podAnnotations: { }

    # -- Configure the Security Context for the Pod
    podSecurityContext: { }
    # fsGroup: 2000

    # -- Configure the Security Context for the main container
    securityContext: { }
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

    # -- Set the resource requests / limits for the main container.
    resources: { }
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
    #   cpu: 100m
    #   memory: 128Mi

    # -- Node selection constraint
    # [[ref]](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector)
    nodeSelector:
      nodeclass: general

    # -- Specify taint tolerations
    # [[ref]](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/)
    tolerations: [ ]

    # -- Defines affinity constraint rules.
    # [[ref]](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity)
    affinity: { }
