apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: infra-lb-stage-1
  namespace: flux-system
spec:
  interval: 1h
  sourceRef:
    kind: GitRepository
    name: flux-system
  path: ./infrastructure/base/lb/stage-1
  prune: true
  patches:
    - patch: |-
        apiVersion: helm.toolkit.fluxcd.io/v2
        kind: HelmRelease
        metadata:
          name: not-used
        spec:
          values:
            speaker:
              ignoreExcludeLB: true
      target:
        kind: HelmRelease
        name: metallb
        namespace: metallb-system
---
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: infra-lb-stage-2
  namespace: flux-system
spec:
  dependsOn:
    - name: infra-lb-stage-1
  interval: 1h
  sourceRef:
    kind: GitRepository
    name: flux-system
  path: ./infrastructure/base/lb/stage-2
  prune: true
---
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: infra-networking
  namespace: flux-system
spec:
  dependsOn:
    - name: infra-ingress-stage-2 # cloudflare gateway, validating webhook (infra-ingress-stage-1), grafana crds & monitoring ns (infra-monitoring-stage-1)
  interval: 1h
  sourceRef:
    kind: GitRepository
    name: flux-system
  path: ./infrastructure/base/networking
  prune: true
  patches:
    - patch: |-
        apiVersion: helm.toolkit.fluxcd.io/v2
        kind: HelmRelease
        metadata:
          name: not-used
        spec:
          values:
            operator: 
              replicas: 1
            clustermesh:
              apiserver:
                replicas: 1
      target:
        kind: HelmRelease
        name: cilium
        namespace: kube-system
---
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: infra-monitoring-stage-1
  namespace: flux-system
spec:
  interval: 1h
  sourceRef:
    kind: GitRepository
    name: flux-system
  path: ./infrastructure/base/monitoring/stage-1
  prune: false # don't touch prometheus crds or the monitoring ns
---
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: infra-monitoring-stage-2
  namespace: flux-system
spec:
  dependsOn:
    - name: infra-ingress-stage-2  # cloudflare gateway, validating webhook (infra-ingress-stage-1), pvc (infra-storage-stage-2)
    - name: infra-monitoring-stage-1
  interval: 1h
  sourceRef:
    kind: GitRepository
    name: flux-system
  path: ./infrastructure/base/monitoring/stage-2
  prune: false # don't delete victoriametrics
  patches:
    - patch: |-
        apiVersion: helm.toolkit.fluxcd.io/v2
        kind: HelmRelease
        metadata:
          name: not-used
        spec:
          values:
            replicas: 1
      target:
        kind: HelmRelease
        name: metrics-server
        namespace: kube-system
    # set victoria metrics resource requirements to 10% of their defaults. Don't remote write to Mimir.
    - patch: |-
        apiVersion: helm.toolkit.fluxcd.io/v2
        kind: HelmRelease
        metadata:
          name: not-used
        spec:
          values:
            vmsingle:
              spec:
                resources:
                  requests:
                    memory: 50Mi
                    cpu: 15m
            vmalert:
              spec:
                resources:
                  requests:
                    memory: 20Mi
                    cpu: 5m
            vmagent:
              # additionalRemoteWrites: []
              spec:
                resources:
                  requests:
                    memory: 20Mi
                    cpu: 10m
      target:
        kind: HelmRelease
        name: victoria-metrics-k8s-stack
        namespace: monitoring
---
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: infra-certs-stage-1
  namespace: flux-system
spec:
  dependsOn:
    - name: infra-ingress-stage-1 # Validating webhook
  interval: 1h
  sourceRef:
    kind: GitRepository
    name: flux-system
  path: ./infrastructure/base/certs/stage-1
  prune: true
---
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: infra-certs-stage-2
  namespace: flux-system
spec:
  dependsOn:
    - name: infra-certs-stage-1
  interval: 1h
  sourceRef:
    kind: GitRepository
    name: flux-system
  path: ./infrastructure/base/certs/stage-2
  prune: true
  patches:
    - patch: | # use staging letsencrypt server
        - op: replace
          path: /spec/acme/server
          value: https://acme-staging-v02.api.letsencrypt.org/directory
      target:
        kind: ClusterIssuer
        name: letsencrypt
---
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: infra-ingress-stage-1
  namespace: flux-system
spec:
  dependsOn:
    - name: infra-storage-stage-2    # cache pvc
    - name: infra-monitoring-stage-1 # grafana crds & monitoring ns
  interval: 1h
  sourceRef:
    kind: GitRepository
    name: flux-system
  path: ./infrastructure/base/ingress/stage-1
  prune: true
  patches:
    - patch: |-
        apiVersion: helm.toolkit.fluxcd.io/v2
        kind: HelmRelease
        metadata:
          name: not-used
        spec:
          values:
            controller:
              replicaCount: 1
              autoscaling:
                enabled: false
              resources:
                requests: {}
            defaultBackend:
              replicaCount: 1
      target:
        kind: HelmRelease
        name: ingress-nginx
        namespace: ingress-nginx.*
    # reduce the severity of NGINXTooMany400s alert
    - patch: |
        - op: replace
          path: /spec/groups/0/rules/0/labels/severity
          value: "none"
      target:
        kind: PrometheusRule
        name: prometheus-ingress-rules
        namespace: ingress-nginx.*
---
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: infra-ingress-stage-2
  namespace: flux-system
spec:
  dependsOn:
    - name: infra-ingress-stage-1
  interval: 1h
  sourceRef:
    kind: GitRepository
    name: flux-system
  path: ./infrastructure/base/ingress/stage-2
  prune: true
---
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: infra-policies-stage-1
  namespace: flux-system
spec:
  interval: 1h
  sourceRef:
    kind: GitRepository
    name: flux-system
  path: ./infrastructure/base/policies/stage-1
  prune: true
  patches:
    - patch: |-
        apiVersion: helm.toolkit.fluxcd.io/v2
        kind: HelmRelease
        metadata:
          name: not-used
        spec:
          values:
            admissionController:
              replicas: 1
            backgroundController:
              replicas: 1
            cleanupController:
              replicas: 1
            reportsController:
              replicas: 1
      target:
        kind: HelmRelease
        name: kyverno
        namespace: kyverno
---
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: infra-policies-stage-2
  namespace: flux-system
spec:
  dependsOn:
    - name: infra-policies-stage-1
  interval: 1h
  sourceRef:
    kind: GitRepository
    name: flux-system
  path: ./infrastructure/base/policies/stage-2/overlays/harbor-registry-all-pods
  prune: true
---
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: infra-scaling
  namespace: flux-system
spec:
  interval: 1h
  dependsOn:
    - name: infra-ingress-stage-2 # gateway
  sourceRef:
    kind: GitRepository
    name: flux-system
  path: ./infrastructure/base/scaling
  prune: true
---
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: infra-storage-stage-1
  namespace: flux-system
spec:
  interval: 1h
  sourceRef:
    kind: GitRepository
    name: flux-system
  path: ./infrastructure/base/storage/stage-1
  prune: false # don't delete my storage
  patches:
    - patch: |-
        apiVersion: helm.toolkit.fluxcd.io/v2
        kind: HelmRelease
        metadata:
          name: not-used
        spec:
          values:
            csi:
              provisionerReplicas: 1
      target:
        kind: HelmRelease
        name: rook-ceph
        namespace: rook-ceph
    - patch: |-
        apiVersion: helm.toolkit.fluxcd.io/v2
        kind: HelmRelease
        metadata:
          name: not-used
        spec:
          values:
            controller:
              replicaCount: 1
      target:
        kind: HelmRelease
        name: snapshot-controller
        namespace: kube-system
---
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: infra-storage-stage-2
  namespace: flux-system
spec:
  dependsOn:
    - name: infra-storage-stage-1
  interval: 1h
  sourceRef:
    kind: GitRepository
    name: flux-system
  path: ./infrastructure/base/storage/stage-2
  prune: false # don't delete my storage
---
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: infra-backups
  namespace: flux-system
spec:
  interval: 1h
  sourceRef:
    kind: GitRepository
    name: flux-system
  path: ./infrastructure/base/backups
  prune: true
---
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: infra-ui
  namespace: flux-system
spec:
  dependsOn:
    - name: infra-ingress-stage-2
  interval: 1h
  sourceRef:
    kind: GitRepository
    name: flux-system
  path: ./infrastructure/base/ui
  prune: true
#---
#apiVersion: kustomize.toolkit.fluxcd.io/v1
#kind: Kustomization
#metadata:
#  name: infra-general-operators
#  namespace: flux-system
#spec:
#  interval: 1h
#  sourceRef:
#    kind: GitRepository
#    name: flux-system
#  path: ./infrastructure/base/general-operators
#  prune: true
---
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: infra-observability
  namespace: flux-system
spec:
  dependsOn:
    - name: infra-storage-stage-2 # pvc
  interval: 1h
  sourceRef:
    kind: GitRepository
    name: flux-system
  path: ./infrastructure/base/observability
  prune: true
#  patches:
#    # set resource requirements to 10% of their defaults
#    - patch: |-
#        apiVersion: helm.toolkit.fluxcd.io/v2
#        kind: HelmRelease
#        metadata:
#          name: not-used
#        spec:
#          values:
#            global:
#              postgresql:
#                resources:
#                  requests:
#                    cpu: 25m
#                    memory: 25Mi
#            agent:
#              flb:
#                resources:
#                  requests:
#                    cpu: 5m
#                    memory: 6Mi
#              sensor:
#                resources:
#                  requests:
#                    cpu: 16m
#                    memory: 30Mi
#            dbmanager:
#              resources:
#                requests:
#                  cpu: 2m
#                  memory: 2Mi
#            k8sWatcher:
#              resources:
#                requests:
#                  cpu: 50m
#                  memory: 25Mi
#            portal:
#              resources:
#                requests:
#                  cpu: 5m
#                  memory: 25Mi
#            clickhouse:
#              resources:
#                requests:
#                  cpu: 30m
#                  memory: 20Mi
#            opentelemetry-collector:
#              resources:
#                requests:
#                  cpu: 10m
#                  memory: 51Mi
#            vector:
#              resources:
#                requests:
#                  cpu: 10m
#                  memory: 20Mi
#            metrics-ingester:
#              resources:
#                requests:
#                  cpu: 10m
#                  memory: 25Mi
#            victoria-metrics-agent:
#              resources:
#                requests:
#                  cpu: 10m
#                  memory: 12Mi
#            custom-metrics:
#              resources:
#                requests:
#                  cpu: 10m
#                  memory: 25Mi
#            victoria-metrics-single:
#              server:
#                resources:
#                  requests:
#                    cpu: 100m
#                    memory: 30Mi
#            backend:
#              keep:
#                backend:
#                  resources:
#                    requests:
#                      cpu: 50m
#                      memory: 100Mi
#      target:
#        kind: HelmRelease
#        name: groundcover
#        namespace: groundcover