apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: portainer
  namespace: portainer
spec:
  interval: 30m
  chart:
    spec:
      chart: portainer
      version: "1.0.x"
      sourceRef:
        kind: HelmRepository
        name: portainer
        namespace: portainer
      interval: 12h
  values:

    # Default values for portainer.
    # This is a YAML-formatted file.
    # Declare variables to be passed into your templates.

    replicaCount: 1 # chart maker says not to increase this

    # If enterpriseEdition is enabled, then use the values below _instead_ of those in .image
    enterpriseEdition:
      enabled: false
      image:
        repository: portainer/portainer-ee
        tag: 2.19.5
        pullPolicy: Always

    image:
      repository: portainer/portainer-ce
      tag: 2.19.5
      pullPolicy: IfNotPresent

    imagePullSecrets: [ ]

    nodeSelector: {}

    serviceAccount:
      annotations: { }
      name: portainer-sa-clusteradmin

    service:
      # Set the httpNodePort and edgeNodePort only if the type is NodePort
      # For Ingress, set the type to be ClusterIP and set ingress.enabled to true
      # For Cloud Providers, set the type to be LoadBalancer
      type: ClusterIP
      httpPort: 9000
      httpsPort: 9443
      httpNodePort: 30777
      httpsNodePort: 30779
      edgePort: 8000
      edgeNodePort: 30776
      annotations: { }

    tls:
      # If set, Portainer will be configured to use TLS only
      force: false
      # If set, will mount the existing secret into the pod
      existingSecret: ""

    mtls:
      # If set, Portainer will be configured to use mTLS only
      enable: false
      # If set, will mount the existing secret into the pod
      existingSecret: ""

    feature:
      flags: [ ]

    ingress:
      enabled: true
      ingressClassName: "nginx-public"
      annotations: #{ }
        # kubernetes.io/ingress.class: nginx
        cert-manager.io/cluster-issuer: letsencrypt
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
        nginx.ingress.kubernetes.io/custom-http-errors: "400,401,403,404,405,407,408,409,410,411,412,413,418,429,500,502,503,504,505"
        nginx.ingress.kubernetes.io/auth-method: 'GET'
        nginx.ingress.kubernetes.io/auth-url: 'http://authelia.authelia.svc.cluster.local:9091/api/authz/auth-request'
        nginx.ingress.kubernetes.io/auth-signin: 'https://auth.christensencloud.us?rm=$request_method'
        nginx.ingress.kubernetes.io/auth-response-headers: 'Remote-User,Remote-Name,Remote-Groups,Remote-Email'
      # Only use below if tls.force=true
      # nginx.ingress.kubernetes.io/backend-protocol: HTTPS
      # Note: Hosts and paths are of type array
      hosts:
        - host: portainer.christensencloud.us
          paths: #[ ]
           - path: "/"
      tls: #[ ]
        - secretName: portainer-christensencloud.us-tls
          hosts:
            - portainer.christensencloud.us

    resources: { }

    persistence:
      enabled: true
      size: "1Gi"
      annotations: { }
      storageClass: k8s-rbd
      accessMode: ReadWriteOnce
      existingClaim:

