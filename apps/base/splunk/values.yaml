# Image to use for Splunk pod containers
# Overrides RELATED_IMAGE_SPLUNK_ENTERPRISE environment variable in Splunk Operator manager container
image:
  repository: ""
  imagePullPolicy: "IfNotPresent"
  imagePullSecrets: []
# Deploy Splunk Operator chart
# Disable if the Splunk Operator is already deployed
splunk-operator: # using this here because the crds are namespaced, and it messes with flux if they're not in the same ns.
  enabled: false

sva:
  # Single Server Deployment (S1)
  # reference: https://www.splunk.com/pdfs/technical-briefs/splunk-validated-architectures.pdf#page=9
  s1:
    enabled: false
    standalones: 1
  # Distributed Clustered Deployment + SHC - Single Site (C3)
  # reference: https://www.splunk.com/pdfs/technical-briefs/splunk-validated-architectures.pdf#page=14
  c3:
    enabled: true
    indexerClusters:
       - name: idx
#       - name: c3-idx2
    searchHeadClusters:
       - name: shc
#       - name: c3-shc2
  # Distributed Clustered Deployment + SHC - Multi-Site (M4)
  # reference: https://www.splunk.com/pdfs/technical-briefs/splunk-validated-architectures.pdf#page=20
  m4:
    enabled: false
    clusterManager: {}
      # allSites: "site1,site2"
      # site: site1
      # zone: us-west-1a
    indexerClusters: []
      # - name: idx1
      #   site: site1
      #   zone: us-west-1a
      # - name: idx2
      #   site: site2
      #   zone: us-west-1c
    searchHeadClusters: []
      # - name: shc1
      #   site: site2
      #   zone: us-west-1c

# Set name reference if ClusterManager is already deployed
# Namespace is optional, set if the resource exists outside of the release namespace
existingClusterManager: {}
  # name:
  # namespace:
# Set name reference if MonitoringConsole is already deployed
# Namespace is optional, set if the resource exists outside of the release namespace
existingMonitoringConsole: {}
  # name:
  # namespace:
# Set name reference if LicenseManager is already deployed
# Namespace is optional, set if the resource exists outside of the release namespace
existingLicenseManager: {}
  # name:
  # namespace:

# Configure a Splunk Cluster Manager instance
clusterManager:
  # Deploy a cluster manager instance
  enabled: false
  # Specify the custom resource name
  name: "cm"
  # Override the custom resource namespace
  # Default deploys to the release namespace
  namespaceOverride: ""
  # Specify additional labels
  additionalLabels: {}
  additionalAnnotations: {}
  # Splunk Enterprise App repository
  # Specifies remote App location and scope for Splunk App management
  # reference: https://github.com/splunk/splunk-operator/blob/develop/docs/AppFramework.md
  # appRepo: {}
    ## Example: Deploy apps on cluster manager instance for local use
    # appsRepoPollIntervalSeconds: 900
    # appSources:
    #   - name: networkApps
    #     location: networkAppsLoc/
    #   - name: clusterBase
    #     location: clusterBaseLoc/
    #   - name: adminApps
    #     location: adminAppsLoc/
    #     scope: local
    # volumes:
    #   - name: volume_app_repo_us
    #     storageType: s3
    #     provider: aws
    #     path: bucket-app-framework-us-west-2/idxcAndCmApps/
    #     endpoint: https://s3-us-west-2.amazonaws.com
    #     region: us-west-2
    #     secretRef: s3-secret
  appRepo:
    appsRepoPollIntervalSeconds: 600 # look for new apps every 10 minutes
    defaults:
      volumeName: volume_app_repo
      scope: cluster
    appSources:
      - name: idxApps
        location: idxApps/
    volumes:
      - name: volume_app_repo
        storageType: s3
        provider: minio
        path: splunk/apps/
        endpoint: "https://nas3.christensencloud.us"
        secretRef: splunk-minio
  # Splunk Smartstore configuration
  # reference: https://github.com/splunk/splunk-operator/blob/develop/docs/SmartStore.md
  smartstore:
     defaults:
       volumeName: volume_smartstore
     indexes:
       - name: main
         volumeName: volume_smartstore
         hotlistRecencySecs: 259206 # 3 days
         maxGlobalDataSizeMB: 90000 # 90 GB
         maxGlobalRawDataSizeMB: 95000 # # 95 GB
     volumes:
       - name: volume_smartstore
         path: splunk/indexes/
         endpoint: "https://nas3.christensencloud.us"
         secretRef: splunk-minio
  # List volumes to be mounted in all pod containers
  # reference: https://kubernetes.io/docs/concepts/storage/volumes/
  volumes:
    - name: configs
      configMap:
        name: splunk-configs
  defaultsUrl: /mnt/configs/configs.yaml
  # Full path or URL for a Splunk Enterprise license file
  # Ignore if deploying a license manager instance
  licenseUrl: ""
  # Full path or URL for one or more default.yml files, separated by commas
  # Specify Splunk default.yaml to override intial environment config
  defaults:
    splunk:
      # admin_user: line6 # operator can't work with this
      ignore_license: true
      allow_upgrade: false
      # disable_popups: true # can't do this or the ansible install fails
      hec:
        ssl: false
        enable: true
      idxc:
        search_factor: 2
        replication_factor: 2
      shc:
        replication_factor: 2
  ## Example: Deploy a multi-site cluster manager
    #   site: site1
    #   multisite_manager: localhost
    #   all_sites: site1,site2,site3
    #   multisite_replication_factor_origin: 1
    #   multisite_replication_factor_total: 2
    #   multisite_search_factor_origin: 1
    #   multisite_search_factor_total: 2
    #   idxc:
    #     search_factor: 2
    #     replication_factor: 2
  # Full path or URL for one or more defaults.yml files specific to App install, separated by commas
  defaultsUrlApps: ""
  # List additional environment variables to passed to the Splunk instance container
  extraEnv: []
  # - name:
  #   value:
  # Delay in seconds before probing liveness
  # refernece: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-a-liveness-command
  livenessInitialDelaySeconds: 300
  # Delay in seconds before probing readiness
  # https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-a-liveness-command
  readinessInitialDelaySeconds: 10
  # Set Probes for Splunk instance pod containers
  # reference: https://github.com/splunk/splunk-operator/blob/main/docs/HealthCheck.md
  # 15m limit on everything before killing
  startupProbe:
    initialDelaySeconds: 60
    # timeoutSeconds: 30
    # periodSeconds: 30
    failureThreshold: 28
  livenessProbe:
    # initialDelaySeconds: 30
    # timeoutSeconds: 30
    # periodSeconds: 30
    failureThreshold: 29
  readinessProbe:
    # initialDelaySeconds: 10
    # timeoutSeconds: 5
    # periodSeconds: 5
    failureThreshold: 178
  # Storage configuration for /opt/splunk/etc volume
  # To use a StorageClass other than your default StorageClass, specify the storageClassName
  # reference: https://github.com/splunk/splunk-operator/blob/develop/docs/StorageClass.md
  etcVolumeStorageConfig:
    ephemeralStorage: true
    storageCapacity: 3Gi
    storageClassName: ceph-block-2
  # Storage configuration for /opt/splunk/var volume
  # To use a StorageClass other than your default StorageClass, specify the storageClassName
  # reference: https://github.com/splunk/splunk-operator/blob/develop/docs/StorageClass.md
  varVolumeStorageConfig:
    ephemeralStorage: true
    storageCapacity: 3Gi
    storageClassName: ceph-block-2
  # Set resource requests and limits for Splunk instance pod containers
  # reference: https://github.com/splunk/splunk-operator/blob/develop/docs/CustomResources.md#examples-of-guaranteed-and-burstable-qos
  resources: {}
    # requests:
    #   memory: "2Gi"
    #   cpu: "4"
    # limits:
    #   memory: "12Gi"
    #   cpu: "24"
  # Specify a service account used by the Splunk instance pods
  # Default uses the Default Service Account to access the API server
  # reference: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  serviceAccount: ""
  # ServiceTemplate is a template used to create Kubernetes services
  serviceTemplate: {}
  # Specify Splunk instance pod tolerations
  # reference: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
  tolerations: []
  # Define affinity scheduling rules
  # reference: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#affinity-v1-core
  affinity:
    nodeAffinity: # try to only schedule on database nodes. (operator still takes this as a suggestion)
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: "nodeclass"
                operator: "In"
                values:
                  - "general"
  # Configure a topology spread constraint
  #  https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
  topologySpreadConstraints: []
  #  - maxSkew: <integer>
  #    minDomains: <integer> # optional; beta since v1.25
  #    topologyKey: <string>
  #    whenUnsatisfiable: <string>
  #    labelSelector: <object>
  #    matchLabelKeys: <list> # optional; alpha since v1.25
  #    nodeAffinityPolicy: [Honor|Ignore] # optional; beta since v1.26
  #    nodeTaintsPolicy: [Honor|Ignore] # optional; beta since v1.26
indexerCluster:
  enabled: false
  name: "idx"
  namespaceOverride: ""
  additionalLabels: {}
  additionalAnnotations: {}
  replicaCount: 2 # will let the replicationFactor and hpa handle this
  volumes:
    - name: configs
      configMap:
        name: splunk-configs
  defaultsUrl: /mnt/configs/configs.yaml
  licenseUrl: ""
  defaults:
    splunk:
      # admin_user: line6 # operator can't work with this
      ignore_license: true
      allow_upgrade: false
      # disable_popups: true # can't do this or the ansible install fails
      hec:
        ssl: false
        enable: true
      idxc:
        search_factor: 2
        replication_factor: 2
      shc:
        replication_factor: 2
  extraEnv: []
  # - name:
  #   value:
  #livenessInitialDelaySeconds: 300
  #readinessInitialDelaySeconds: 10
  # Set Probes for Splunk instance pod containers
  # reference: https://github.com/splunk/splunk-operator/blob/main/docs/HealthCheck.md
  # 15m limit on everything before killing
  startupProbe:
    initialDelaySeconds: 60
    # timeoutSeconds: 30
    # periodSeconds: 30
    failureThreshold: 28
  livenessProbe:
    # initialDelaySeconds: 30
    # timeoutSeconds: 30
    # periodSeconds: 30
    failureThreshold: 29
  readinessProbe:
    # initialDelaySeconds: 10
    # timeoutSeconds: 5
    # periodSeconds: 5
    failureThreshold: 178
  etcVolumeStorageConfig:
    ephemeralStorage: true
    storageCapacity: 3Gi
    storageClassName: ceph-block-2
  varVolumeStorageConfig:
    ephemeralStorage: true
    storageCapacity: 100Gi
    storageClassName: ceph-block-2
  resources: {}
    # requests:
    #   memory: "2Gi"
    #   cpu: "4"
    # limits:
    #   memory: "12Gi"
    #   cpu: "24"
  serviceAccount: ""
  # ServiceTemplate is a template used to create Kubernetes services
  serviceTemplate: {}
  tolerations: []
  affinity:
    nodeAffinity: # try to only schedule on database nodes. (operator still takes this as a suggestion)
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: "nodeclass"
                operator: "In"
                values:
                  - "general"
  # Configure a topology spread constraint
  #  https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
  topologySpreadConstraints: # spread across the nodes
    - maxSkew: 1
      topologyKey: "kubernetes.io/hostname"
      whenUnsatisfiable: ScheduleAnyway
      labelSelector:
        matchLabels:
          app.kubernetes.io/instance: "splunk-idx-indexer"
        matchExpressions:
          - key: "app.kubernetes.io/component"
            operator: In
            values:
              - "indexer"
  #  - maxSkew: <integer>
  #    minDomains: <integer> # optional; beta since v1.25
  #    topologyKey: <string>
  #    whenUnsatisfiable: <string>
  #    labelSelector: <object>
  #    matchLabelKeys: <list> # optional; alpha since v1.25
  #    nodeAffinityPolicy: [Honor|Ignore] # optional; beta since v1.26
  #    nodeTaintsPolicy: [Honor|Ignore] # optional; beta since v1.26
searchHeadCluster:
  enabled: false
  name: "shc"
  namespaceOverride: ""
  additionalLabels: {}
  additionalAnnotations: {}
  replicaCount: 3 # will let the replicationFactor and hpa handle this
#  appRepo: {}
    # appsRepoPollIntervalSeconds:
    # defaults:
    #   volumeName:
    #   scope:
    # appSources:
    #   - name:
    #     location:
    #     scope: # options (local|cluster|premiumApps) default local
    #      premiumAppsProps: #only if scope is set to premiumApps
    #        type: enterpriseSecurity
    #        esDefaults:
    #          sslEnablement: # options are ignore, strict, auto. default value is strict
    # volumes:
    #   - name:
    #     storageType:
    #     provider:
    #     path:
    #     endpoint:
    #     region:
    #     secretRef:
  appRepo:
    appsRepoPollIntervalSeconds: 600 # look for new apps every 10 minutes
    defaults:
      volumeName: volume_app_repo
      scope: cluster
    appSources:
      - name: shcApps
        location: shcApps/
    volumes:
      - name: volume_app_repo
        storageType: s3
        provider: minio
        path: splunk/apps/
        endpoint: "https://nas3.christensencloud.us"
        secretRef: splunk-minio
  volumes:
    - name: configs
      configMap:
        name: splunk-configs
  defaultsUrl: /mnt/configs/configs.yaml
  licenseUrl: ""
  defaults:
    splunk:
      # admin_user: line6 # operator can't work with this
      ignore_license: true
      allow_upgrade: false
      # disable_popups: true # can't do this or the ansible install fails
      hec:
        ssl: false
        enable: true
      idxc:
        search_factor: 2
        replication_factor: 2
      shc:
        replication_factor: 2
  defaultsUrlApps: ""
  extraEnv: []
  # - name:
  #   value:
  #livenessInitialDelaySeconds: 300
  #readinessInitialDelaySeconds: 10
  # Set Probes for Splunk instance pod containers
  # reference: https://github.com/splunk/splunk-operator/blob/main/docs/HealthCheck.md
  # 15m limit on everything before killing
  startupProbe:
    initialDelaySeconds: 60
    # timeoutSeconds: 30
    # periodSeconds: 30
    failureThreshold: 28
  livenessProbe:
    # initialDelaySeconds: 30
    # timeoutSeconds: 30
    # periodSeconds: 30
    failureThreshold: 29
  readinessProbe:
    # initialDelaySeconds: 10
    # timeoutSeconds: 5
    # periodSeconds: 5
    failureThreshold: 178
  etcVolumeStorageConfig:
    ephemeralStorage: true
    storageCapacity: 3Gi
    storageClassName: ceph-block-2
  varVolumeStorageConfig:
    ephemeralStorage: true
    storageCapacity: 5Gi
    storageClassName: ceph-block-2
  resources: {}
    # requests:
    #   memory: "2Gi"
    #   cpu: "4"
    # limits:
    #   memory: "12Gi"
    #   cpu: "24"
  serviceAccount: ""
  # ServiceTemplate is a template used to create Kubernetes services
  serviceTemplate: {}
  tolerations: []
  affinity:
    nodeAffinity: # try to only schedule on database nodes. (operator still takes this as a suggestion)
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: "nodeclass"
                operator: "In"
                values:
                  - "database"
  # Configure a topology spread constraint
  #  https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
  topologySpreadConstraints: # spread across the nodes
    - maxSkew: 1
      topologyKey: "kubernetes.io/hostname"
      whenUnsatisfiable: ScheduleAnyway
      labelSelector:
        matchLabels:
          app.kubernetes.io/instance: "splunk-shc-search-head"
        matchExpressions:
          - key: "app.kubernetes.io/component"
            operator: In
            values:
              - "search-head"
  #  - maxSkew: <integer>
  #    minDomains: <integer> # optional; beta since v1.25
  #    topologyKey: <string>
  #    whenUnsatisfiable: <string>
  #    labelSelector: <object>
  #    matchLabelKeys: <list> # optional; alpha since v1.25
  #    nodeAffinityPolicy: [Honor|Ignore] # optional; beta since v1.26
  #    nodeTaintsPolicy: [Honor|Ignore] # optional; beta since v1.26
monitoringConsole:
  enabled: false
  name: "mc"
  namespaceOverride: ""
  additionalLabels: {}
  additionalAnnotations: {}
  appRepo: {}
    # appsRepoPollIntervalSeconds:
    # defaults:
    #   volumeName:
    #   scope:
    # appSources:
    #   - name:
    #     location:
    # volumes:
    #   - name:
    #     storageType:
    #     provider:
    #     path:
    #     endpoint:
    #     region:
    #     secretRef:
  volumes:
    - name: configs
      configMap:
        name: splunk-configs
  defaultsUrl: /mnt/configs/configs.yaml
  licenseUrl: ""
  defaults:
    splunk:
      # admin_user: line6 # operator can't work with this
      ignore_license: true
      allow_upgrade: false
      # disable_popups: true # can't do this or the ansible install fails
      hec:
        ssl: false
        enable: true
      idxc:
        search_factor: 2
        replication_factor: 2
      shc:
        replication_factor: 2
  defaultsUrlApps: ""
  extraEnv: []
  # - name:
  #   value:
  #livenessInitialDelaySeconds: 300
  #readinessInitialDelaySeconds: 10
  # Set Probes for Splunk instance pod containers
  # reference: https://github.com/splunk/splunk-operator/blob/main/docs/HealthCheck.md
  # 15m limit on everything before killing
  startupProbe:
    initialDelaySeconds: 60
    # timeoutSeconds: 30
    # periodSeconds: 30
    failureThreshold: 28
  livenessProbe:
    # initialDelaySeconds: 30
    # timeoutSeconds: 30
    # periodSeconds: 30
    failureThreshold: 29
  readinessProbe:
    # initialDelaySeconds: 10
    # timeoutSeconds: 5
    # periodSeconds: 5
    failureThreshold: 178
  etcVolumeStorageConfig:
    ephemeralStorage: true
    storageCapacity: 3Gi
    storageClassName: ceph-block-2
  varVolumeStorageConfig:
    ephemeralStorage: true
    storageCapacity: 3Gi
    storageClassName: ceph-block-2
  resources: {}
    # requests:
    #   memory: "2Gi"
    #   cpu: "4"
    # limits:
    #   memory: "12Gi"
    #   cpu: "24"
  serviceAccount: ""
  # ServiceTemplate is a template used to create Kubernetes services
  serviceTemplate: {}
  tolerations: []
  affinity:
    nodeAffinity: # try to only schedule on database nodes. (operator still takes this as a suggestion)
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: "nodeclass"
                operator: "In"
                values:
                  - "general"
  # Configure a topology spread constraint
  #  https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
  topologySpreadConstraints: []
  #  - maxSkew: <integer>
  #    minDomains: <integer> # optional; beta since v1.25
  #    topologyKey: <string>
  #    whenUnsatisfiable: <string>
  #    labelSelector: <object>
  #    matchLabelKeys: <list> # optional; alpha since v1.25
  #    nodeAffinityPolicy: [Honor|Ignore] # optional; beta since v1.26
  #    nodeTaintsPolicy: [Honor|Ignore] # optional; beta since v1.26
licenseManager:
  enabled: false
  name: "lm"
  namespaceOverride: ""
  additionalLabels: {}
  additionalAnnotations: {}
  appRepo: {}
    # appsRepoPollIntervalSeconds:
    # defaults:
    #   volumeName:
    #   scope:
    # appSources:
    #   - name:
    #     location:
    #     scope: # options (local|cluster|premiumApps) default local
    #      premiumAppsProps: #only if scope is set to premiumApps
    #        type: enterpriseSecurity
    #        esDefaults:
    #          sslEnablement: # options are ignore, strict, auto. default value is strict
    # volumes:
    #   - name:
    #     storageType:
    #     provider:
    #     path:
    #     endpoint:
    #     region:
    #     secretRef:
  volumes:
   - name: licenses
     secret:
       secretName: splunk-licenses
   - name: configs
     configMap:
       name: splunk-configs
  defaultsUrl: /mnt/configs/configs.yaml
  # licenseUrl: ""
  ## Example: using mounted volume to specify license file path
  licenseUrl: /mnt/licenses/enterprise.lic
  defaults:
    splunk:
      # admin_user: line6 # operator can't work with this
      ignore_license: true
      allow_upgrade: false
      # disable_popups: true # can't do this or the ansible install fails
      hec:
        ssl: false
        enable: true
      idxc:
        search_factor: 2
        replication_factor: 2
      shc:
        replication_factor: 2
  defaultsUrlApps: ""
  extraEnv: []
  # - name:
  #   value:
  #livenessInitialDelaySeconds: 300
  #readinessInitialDelaySeconds: 10
  # Set Probes for Splunk instance pod containers
  # reference: https://github.com/splunk/splunk-operator/blob/main/docs/HealthCheck.md
  # 15m limit on everything before killing
  startupProbe:
    initialDelaySeconds: 60
    # timeoutSeconds: 30
    # periodSeconds: 30
    failureThreshold: 28
  livenessProbe:
    # initialDelaySeconds: 30
    # timeoutSeconds: 30
    # periodSeconds: 30
    failureThreshold: 29
  readinessProbe:
    # initialDelaySeconds: 10
    # timeoutSeconds: 5
    # periodSeconds: 5
    failureThreshold: 178
  etcVolumeStorageConfig:
    ephemeralStorage: true
    storageCapacity: 3Gi
    storageClassName: ceph-block-2
  varVolumeStorageConfig:
    ephemeralStorage: true
    storageCapacity: 3Gi
    storageClassName: ceph-block-2
  resources: {}
    # requests:
    #   memory: "2Gi"
    #   cpu: "4"
    # limits:
    #   memory: "12Gi"
    #   cpu: "24"
  serviceAccount: ""
  # ServiceTemplate is a template used to create Kubernetes services
  serviceTemplate: {}
  tolerations: []
  affinity: {}
  # Configure a topology spread constraint
  #  https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
  topologySpreadConstraints: []
  #  - maxSkew: <integer>
  #    minDomains: <integer> # optional; beta since v1.25
  #    topologyKey: <string>
  #    whenUnsatisfiable: <string>
  #    labelSelector: <object>
  #    matchLabelKeys: <list> # optional; alpha since v1.25
  #    nodeAffinityPolicy: [Honor|Ignore] # optional; beta since v1.26
  #    nodeTaintsPolicy: [Honor|Ignore] # optional; beta since v1.26
standalone:
  enabled: false
  name: "stdln"
  namespaceOverride: ""
  additionalLabels: {}
  additionalAnnotations: {}
  replicaCount: 1
  appRepo: {}
    # appsRepoPollIntervalSeconds:
    # defaults:
    #   volumeName:
    #   scope:
    # appSources:
    #   - name:
    #     location:
    # volumes:
    #   - name:
    #     storageType:
    #     provider:
    #     path:
    #     endpoint:
    #     region:
    #     secretRef:
  smartstore: {}
    # defaults:
    #   volumeName:
    # indexes:
    #   - name:
    #     volumeName:
    #     remotePath:
    # volumes:
    #   - name:
    #     path:
    #     endpoint:
    #     secretRef:
  volumes:
    - name: configs
      configMap:
        name: splunk-configs
  defaultsUrl: /mnt/configs/configs.yaml
  licenseUrl: ""
  defaults:
    splunk:
      # admin_user: line6 # operator can't work with this
      ignore_license: true
      allow_upgrade: false
      # disable_popups: true # can't do this or the ansible install fails
      hec:
        ssl: false
        enable: true
      idxc:
        search_factor: 2
        replication_factor: 2
      shc:
        replication_factor: 2
  defaultsUrlApps: ""
  extraEnv: []
  # - name:
  #   value:
  #livenessInitialDelaySeconds: 300
  #readinessInitialDelaySeconds: 10
  # Set Probes for Splunk instance pod containers
  # reference: https://github.com/splunk/splunk-operator/blob/main/docs/HealthCheck.md
  # 15m limit on everything before killing
  startupProbe:
    initialDelaySeconds: 60
    # timeoutSeconds: 30
    # periodSeconds: 30
    failureThreshold: 28
  livenessProbe:
    # initialDelaySeconds: 30
    # timeoutSeconds: 30
    # periodSeconds: 30
    failureThreshold: 29
  readinessProbe:
    # initialDelaySeconds: 10
    # timeoutSeconds: 5
    # periodSeconds: 5
    failureThreshold: 178
  etcVolumeStorageConfig:
    ephemeralStorage: true
    storageCapacity: 10Gi
    storageClassName: ceph-block-2
  varVolumeStorageConfig:
    ephemeralStorage: true
    storageCapacity: 100Gi
    storageClassName: ceph-block-2
  resources: {}
    # requests:
    #   memory: "2Gi"
    #   cpu: "4"
    # limits:
    #   memory: "12Gi"
    #   cpu: "24"
  serviceAccount: ""
  # ServiceTemplate is a template used to create Kubernetes services
  serviceTemplate: {}
  tolerations: []
  affinity: {}
  # Configure a topology spread constraint
  #  https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
  topologySpreadConstraints: []
  #  - maxSkew: <integer>
  #    minDomains: <integer> # optional; beta since v1.25
  #    topologyKey: <string>
  #    whenUnsatisfiable: <string>
  #    labelSelector: <object>
  #    matchLabelKeys: <list> # optional; alpha since v1.25
  #    nodeAffinityPolicy: [Honor|Ignore] # optional; beta since v1.26
  #    nodeTaintsPolicy: [Honor|Ignore] # optional; beta since v1.26
# Array with extra yaml to deploy with the chart. Evaluated as a template
extraManifests: []
# extraManifests:
#  - apiVersion: cloud.google.com/v1beta1
#    kind: BackendConfig
#    metadata:
#      name: "{{ .Release.Name }}-test"
#    spec:
#      securityPolicy:
#        name: "gcp-cloud-armor-policy-test"
