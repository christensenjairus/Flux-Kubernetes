apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  labels:
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/instance: k8s
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: kube-prometheus
    app.kubernetes.io/version: 2.54.1
  name: k8s
  namespace: monitoring
spec:
  alerting:
    alertmanagers:
      - apiVersion: v2
        name: alertmanager-main
        namespace: monitoring
        port: web
  enableFeatures:
    - expand-external-labels
  #externalLabels: {}
  image: quay.io/prometheus/prometheus:v2.54.1
  nodeSelector:
    kubernetes.io/os: linux
  podMetadata:
    labels:
      app.kubernetes.io/component: prometheus
      app.kubernetes.io/instance: k8s
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 2.54.1
  podMonitorNamespaceSelector: {}
  podMonitorSelector: {}
  probeNamespaceSelector: {}
  probeSelector: {}
  replicas: 2
  resources:
    requests:
      memory: 400Mi
  ruleNamespaceSelector: {}
  ruleSelector: {}
  scrapeConfigNamespaceSelector: {}
  scrapeConfigSelector: {}
  securityContext:
    fsGroup: 2000
    runAsNonRoot: true
    runAsUser: 1000
  serviceAccountName: prometheus-k8s
  serviceMonitorNamespaceSelector: {}
  serviceMonitorSelector: {}
  version: 2.54.1
  # Added Ephemeral PVCs
  storage:
    ephemeral:
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          storageClassName: "k8s-rbd"
          resources:
            requests:
              storage: 10Gi
  # Added cluster label
  externalLabels:
    cluster: "omega"
  # Added mimir configuration
  remoteWrite:
    - url: "http://mimir-nginx.mimir.svc:80/api/v1/push"
      name: Mimir
  #remoteRead:
  #  - url: "http://mimir-nginx.mimir.svc:80/prometheus"
  #    name: Mimir
  retention: "24h" # use Mimir for anything longer
  # added external URL for alertmanager links
  externalUrl: "https://prometheus.christensencloud.us"
