apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: authelia-sentinel
  namespace: authelia
spec:
  interval: 30m
  chart:
    spec:
      chart: redis-sentinel
      version: "0.15.x"
      sourceRef:
        kind: HelmRepository
        name: ot-helm
        namespace: general-operators
      interval: 12h
  values:

    redisSentinel:
      name: "authelia-redis"
      clusterSize: 3
      image: quay.io/opstree/redis-sentinel
      tag: v7.0.12
      imagePullPolicy: IfNotPresent
      imagePullSecrets: [ ]
      # - name:  Secret with Registry credentials
      redisSecret:
        secretName: "" #"authelia-redis-credentials"
        secretKey: "" #"REDIS_PASSWORD"
      serviceType: ClusterIP
      resources: { }
        # requests:
        #   cpu: 100m
        #   memory: 128Mi
        # limits:
      #   cpu: 100m
      #   memory: 128Mi
      ignoreAnnotations: [ ]
      # - "redis.opstreelabs.in/ignore"

    # Overwite name for resources
    # name: ""

    labels: { }
    #   foo: bar
    #   test: echo

    redisSentinelConfig:
      redisReplicationName: "authelia-redis"
      masterGroupName: "authelia-redis"
      redisPort: "6379"
      quorum: "2" # minimum number of sentinels required to agree on master promotion?
      parallelSyncs: "1" # Number of replicas that can be reconfigured at the same time?
      failoverTimeout: "10000" # 10 seconds
      downAfterMilliseconds: "5000" # 5 seconds

    externalConfig:
      enabled: false
      data: |
        tcp-keepalive 400
        slowlog-max-len 158
        stream-node-max-bytes 2048

    externalService:
      enabled: false
      # annotations:
      #   foo: bar
      serviceType: NodePort
      port: 26379

    serviceMonitor:
      enabled: true
      interval: 30s
      scrapeTimeout: 10s
      namespace: authelia

    redisExporter:
      enabled: true
      image: quay.io/opstree/redis-exporter
      tag: "v1.44.0"
      imagePullPolicy: IfNotPresent
      resources: { }
        # requests:
        #   cpu: 100m
        #   memory: 128Mi
        # limits:
      #   cpu: 100m
      #   memory: 128Mi
      env: [ ]
      # - name: VAR_NAME
      #   value: "value1"

    initContainer:
      enabled: false
      image: ""
      imagePullPolicy: "IfNotPresent"
      resources: { }
        # requests:
        #   memory: "64Mi"
        #   cpu: "250m"
        # limits:
      #   memory: "128Mi"
      #   cpu: "500m"
      env: [ ]
      command: [ ]
      args: [ ]

    sidecars:
      name: ""
      image: ""
      imagePullPolicy: "IfNotPresent"
      resources:
        limits:
          cpu: "100m"
          memory: "128Mi"
        requests:
          cpu: "50m"
          memory: "64Mi"
      env: [ ]
      # - name: MY_ENV_VAR
      #   value: "my-env-var-value"

    priorityClassName: ""

    nodeSelector:
      nodeclass: database

    podSecurityContext:
      runAsUser: 1000
      fsGroup: 1000

    securityContext: { }

    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: "app.kubernetes.io/instance"
                  operator: "In"
                  values:
                    - "authelia-sentinel"
            topologyKey: "kubernetes.io/hostname"

    tolerations: [ ]
      # - key: "key"
      #   operator: "Equal"
    #   value: "value"
    #   effect: "NoSchedule"

    serviceAccountName: ""

    TLS:
      ca: ca.key
      cert: tls.crt
      key: tls.key
      secret:
        secretName: ""

    acl:
      secret:
        secretName: ""

    env: [ ]
    # - name: VAR_NAME
    #   value: "value1"


